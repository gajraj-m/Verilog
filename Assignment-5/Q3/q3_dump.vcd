$date
	Fri Mar 18 22:45:58 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module q3_tb $end
$var wire 8 ! Z [7:0] $end
$var reg 4 " M [3:0] $end
$var reg 4 # Q [3:0] $end
$scope module inst0 $end
$var wire 4 $ A_out1 [3:0] $end
$var wire 4 % A_out2 [3:0] $end
$var wire 4 & A_out3 [3:0] $end
$var wire 4 ' A_out4 [3:0] $end
$var wire 4 ( M [3:0] $end
$var wire 4 ) Q [3:0] $end
$var wire 5 * Q_out1 [4:0] $end
$var wire 5 + Q_out2 [4:0] $end
$var wire 5 , Q_out3 [4:0] $end
$var wire 5 - Q_out4 [4:0] $end
$var wire 8 . Z [7:0] $end
$scope module b0 $end
$var wire 4 / A_diff [3:0] $end
$var wire 4 0 A_in [3:0] $end
$var wire 4 1 A_sum [3:0] $end
$var wire 4 2 M [3:0] $end
$var wire 5 3 Q_in [4:0] $end
$var reg 4 4 A_out [3:0] $end
$var reg 5 5 Q_out [4:0] $end
$upscope $end
$scope module b1 $end
$var wire 4 6 A_diff [3:0] $end
$var wire 4 7 A_in [3:0] $end
$var wire 4 8 A_sum [3:0] $end
$var wire 4 9 M [3:0] $end
$var wire 5 : Q_in [4:0] $end
$var reg 4 ; A_out [3:0] $end
$var reg 5 < Q_out [4:0] $end
$upscope $end
$scope module b2 $end
$var wire 4 = A_diff [3:0] $end
$var wire 4 > A_in [3:0] $end
$var wire 4 ? A_sum [3:0] $end
$var wire 4 @ M [3:0] $end
$var wire 5 A Q_in [4:0] $end
$var reg 4 B A_out [3:0] $end
$var reg 5 C Q_out [4:0] $end
$upscope $end
$scope module b3 $end
$var wire 4 D A_diff [3:0] $end
$var wire 4 E A_in [3:0] $end
$var wire 4 F A_sum [3:0] $end
$var wire 4 G M [3:0] $end
$var wire 5 H Q_in [4:0] $end
$var reg 4 I A_out [3:0] $end
$var reg 5 J Q_out [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#10
b10000 J
b10000 -
b1 I
b11000 !
b11000 .
b1 '
b1 C
b1 ,
b1 H
b1111 B
b1111 &
b1111 E
b11 <
b11 +
b11 A
b1110 ;
b1110 %
b1110 >
b110 5
b110 *
b110 :
b110 #
b110 )
b1100 3
b100 "
b100 (
b100 2
b100 9
b100 @
b100 G
b100 1
b1100 /
b100 8
b1100 6
b10 ?
b1010 =
b11 F
b1011 D
#20
b101 C
b101 ,
b101 H
b1111 B
b1111 &
b1111 E
b10111 5
b10111 *
b10111 :
b1100 4
b1100 $
b1100 7
b1011 <
b1011 +
b1011 A
b1110 ;
b1110 %
b1110 >
b10 J
b10 -
b11 I
b110001 !
b110001 .
b11 '
b111 #
b111 )
b1110 3
b111 "
b111 (
b111 2
b111 9
b111 @
b111 G
b111 1
b1001 /
b11 8
b101 6
b101 ?
b111 =
b110 F
b1000 D
#30
b11011 J
b11011 -
b1101 I
b11011101 !
b11011101 .
b1101 '
b10110 C
b10110 ,
b10110 H
b10 B
b1001 F
b1011 D
b10 &
b10 E
b1101 <
b1101 +
b1101 A
b11011 5
b11011 *
b11011 :
b1011 #
b1011 )
b10110 3
#40
b101 <
b101 +
b101 A
b11 ;
b11 %
b11 >
b1010 5
b1010 *
b1010 :
b0 4
b0 $
b0 7
b10010 C
b10010 ,
b10010 H
b1110 B
b1110 &
b1110 E
b1001 J
b1001 -
b10 I
b100100 !
b100100 .
b10 '
b1010 #
b1010 )
b10100 3
b1010 "
b1010 (
b1010 2
b1010 9
b1010 @
b1010 G
b1010 1
b110 /
b1010 8
b110 6
b1101 ?
b1001 =
b1000 F
b100 D
